security:

    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto
            
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            logout:
                path: app_logout
                target: app_login
            user_checker: App\Security\UserChecker
            form_login:
                # "app_login" is the name of the route created previously
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                default_target_path: admin
        # main:
        #     lazy: true
        #     provider: app_user_provider
        #     custom_authenticator: App\Security\UserCheckerAuthenticator
        #     logout:
        #         path: app_logout
        #         # where to redirect after logout
        #         # target: app_any_route
        #         target: app_login
            # form_login:
            #     # "app_login" is the name of the route created previously
            #     login_path: app_login
            #     check_path: app_login
            #     enable_csrf: true
            #     default_target_path: app_home

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
                always_remember_me: true
            # anonymous: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    # Dans la partie access_control nous définissons les routes protégées
    access_control:
        # - { path: ^/, role: IS_AUTHENTICATED_ANONYMOUSLY} # tout le monde
        # - { path: ^/postdetails/, role: IS_AUTHENTICATED_ANONYMOUSLY} # tout le monde
        - { path: ^/admin, roles: [ROLE_ADMIN, ROLE_EDITOR] }

    # La partie role_hierarchy contient la hiérarchie des rôles
    # Un éditeur sera également utilisateur
    # Un administrateur sera également éditeur et donc utilisateur
    role_hierarchy:
        ROLE_EDITOR: ROLE_USER
        ROLE_ADMIN: ROLE_EDITOR

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
